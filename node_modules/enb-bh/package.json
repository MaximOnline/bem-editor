{
  "author": {
    "name": "Andrew Abramov",
    "email": "andrewblond@yandex.com"
  },
  "description": "BH support for ENB",
  "name": "enb-bh",
  "version": "0.2.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/enb-bem/enb-bh"
  },
  "homepage": "https://github.com/enb-bem/enb-bh",
  "bugs": {
    "url": "https://github.com/enb-bem/enb-bh/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/enb-bem/enb-bh/blob/master/LICENSE"
    }
  ],
  "contributors": [
    {
      "name": "Andrew Abramov",
      "email": "andrewblond@yandex.com"
    },
    {
      "name": "Marat Dulin",
      "email": "mdevils@yandex.ru"
    },
    {
      "name": "Mikhail Troshev",
      "email": "mishanga@yandex-team.ru"
    }
  ],
  "engines": {
    "node": ">= 0.10.0"
  },
  "peerDependencies": {
    "enb": ">= 0.12.0 < 1.0.0",
    "bh": ">= 1.0.0 < 4.0.0"
  },
  "dependencies": {
    "vow": "0.4.5"
  },
  "devDependencies": {
    "enb": ">= 0.12.0 < 1.0.0",
    "bh": ">= 1.0.0 < 4.0.0",
    "enb-validate-code": "0.0.1",
    "jshint": "2.5.4",
    "jscs": "1.4.5"
  },
  "scripts": {
    "test": "npm run lint",
    "lint": "jshint . && jscs -c .jscs.js ."
  },
  "readme": "enb-bh\n======\n\n[![NPM version](http://img.shields.io/npm/v/enb-bh.svg?style=flat)](http://badge.fury.io/js/enb-bh) [![Build Status](http://img.shields.io/travis/enb-bem/enb-bh/master.svg?style=flat)](https://travis-ci.org/enb-bem/enb-bh) [![Dependency Status](http://img.shields.io/david/enb-bem/enb-bh.svg?style=flat)](https://david-dm.org/enb-bem/enb-bh)\n\nПоддержка [`bh`](https://github.com/enb-make/bh) для ENB.\n\nУстановка:\n----------\n\n```sh\n$ npm install --save-dev enb-bh\n```\n\nТехнологии\n----------\n\n* [bh-client](#bh-client)\n* [bh-client-module](#bh-client-module)\n* [bh-server](#bh-server)\n* [bh-server-include](#bh-server-include)\n* [html-from-bemjson](#html-from-bemjson)\n* [html-from-bemjson-i18n](#html-from-bemjson-i18n)\n\nДля работы модуля требуется зависимость от пакета `enb` версии `0.12.0` или выше.\n\n### bh-client\n\nСклеивает `bh`-файлы по deps'ам в виде `?.bh.client.js`. Предназначен для сборки клиентского BH-кода.\n\n**Опции**\n\n* *String* **target** — Результирующий таргет. По умолчанию — `?.bh.client.js`.\n* *String* **filesTarget** — files-таргет, на основе которого получается список исходных файлов (его предоставляет технология `files`). По умолчанию — `?.files`.\n* *String* **sourceSuffixes** — суффиксы файлов, по которым строится `files`-таргет. По умолчанию — `['bh']`.\n* *String* **jsAttrName** — атрибут блока с параметрами инициализации. По умолчанию — `onclick`.\n* *String* **jsAttrScheme** — Cхема данных для параметров инициализации. По умолчанию — `js`. Форматы: `js` — Получаем `return { ... }`. `json` — JSON-формат. Получаем `{ ... }`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech(require('enb-bh/techs/bh-client'));\n```\n\n### bh-client-module\n\nСклеивает `bh`-файлы по deps'ам в виде `?.bh.client.js`. Предназначен для сборки клиентского BH-кода. Использует модульную обертку.\n\n**Опции**\n\n* *String* **target** — Результирующий таргет. По умолчанию — `?.bh.client.js`.\n* *String* **filesTarget** — files-таргет, на основе которого получается список исходных файлов (его предоставляет технология `files`). По умолчанию — `?.files`.\n* *String* **sourceSuffixes** — суффиксы файлов, по которым строится `files`-таргет. По умолчанию — `['bh']`.\n* *String* **jsAttrName** — атрибут блока с параметрами инициализации. По умолчанию — `onclick`.\n* *String* **jsAttrScheme** — Cхема данных для параметров инициализации. По умолчанию — `js`. Форматы: `js` — Получаем `return { ... }`. `json` — JSON-формат. Получаем `{ ... }`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech(require('enb-bh/techs/bh-client-module'));\n```\n\n### bh-server\n\nСклеивает *bh*-файлы по deps'ам с помощью набора `require` в виде `?.bh.js`. Предназначен для сборки серверного BH-кода. После сборки требуется наличия всех файлов, подключённых с помощью набора `require`.\n\n**Опции**\n\n* *String* **target** — Результирующий таргет. По умолчанию — `?.bh.js`.\n* *String* **filesTarget** — files-таргет, на основе которого получается список исходных файлов (его предоставляет технология `files`). По умолчанию — `?.files`.\n* *String* **sourceSuffixes** — суффиксы файлов, по которым строится `files`-таргет. По умолчанию — `['bh']`.\n* *String* **jsAttrName** — атрибут блока с параметрами инициализации. По умолчанию — `onclick`.\n* *String* **jsAttrScheme** — Cхема данных для параметров инициализации. По умолчанию — `js`. Форматы: `js` — Получаем `return { ... }`. `json` — JSON-формат. Получаем `{ ... }`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech(require('enb-bh/techs/bh-server'));\n```\n\n### bh-server-include\n\nСклеивает `bh`-файлы по deps'ам в виде `?.bh.js`. Предназначен для сборки серверного BH-кода. Предполагается, что в `bh`-файлах не используется `require`.\n\n**Опции**\n\n* *String* **target** — Результирующий таргет. По умолчанию — `?.bh.js`.\n* *String* **filesTarget** — files-таргет, на основе которого получается список исходных файлов (его предоставляет технология `files`). По умолчанию — `?.files`.\n* *String* **sourceSuffixes** — суффиксы файлов, по которым строится `files`-таргет. По умолчанию — `['bh']`.\n* *String* **jsAttrName** — атрибут блока с параметрами инициализации. По умолчанию — `onclick`.\n* *String* **jsAttrScheme** — Cхема данных для параметров инициализации. По умолчанию — `js`. Форматы: `js` — Получаем `return { ... }`. `json` — JSON-формат. Получаем `{ ... }`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech(require('enb-bh/techs/bh-server-include'));\n```\n\n### html-from-bemjson\n\nСобирает *html*-файл с помощью *bemjson* и *bh*.\n\n**Опции**\n\n* *String* **bhFile** — Исходный BH-файл. По умолчанию — `?.bh.js`.\n* *String* **bemjsonFile** — Исходный BEMJSON-файл. По умолчанию — `?.bemjson.js`.\n* *String* **target** — Результирующий HTML-файл. По умолчанию — `?.html`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech(require('enb-bh/techs/html-from-bemjson'));\n```\n\n### html-from-bemjson-i18n\n\nСобирает *html*-файл с помощью *bemjson*, *bh*, *lang.all* и *lang.{lang}*.\n\n**Опции**\n\n* *String* **bhFile** — Исходный BH-файл. По умолчанию — `?.bh.js`.\n* *String* **bemjsonFile** — Исходный BEMJSON-файл. По умолчанию — `?.bemjson.js`.\n* *String* **langAllFile** — Исходный langAll-файл. По умолчанию — `?.lang.all.js`.\n* *String* **langFile** — Исходный lang-файл. По умолчанию — `?.lang.{lang}.js`. Если параметр lang не указан, берется первый из объявленных в проекте языков\n* *String* **target** — Результирующий HTML-файл. По умолчанию — `?.{lang}.html`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech(require('enb-bh/techs/html-from-bemjson-i18n'));\n```\n",
  "readmeFilename": "README.md",
  "_id": "enb-bh@0.2.3",
  "_shasum": "253fc5756d0d7ee690d40b5f0d3f01e3a151fe09",
  "_from": "enb-bh@*",
  "_resolved": "https://registry.npmjs.org/enb-bh/-/enb-bh-0.2.3.tgz"
}
